plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id "org.asciidoctor.jvm.convert" version "3.3.2" //1
	id 'com.epages.restdocs-api-spec' version '0.16.2'

}

group = 'com.devnus.belloga'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

//2
ext {
	snippetsDir = file('build/generated-snippets')
}

//3
asciidoctor {
	dependsOn test
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
}

asciidoctor.doFirst {  // 7
	println("---------------- delete present asciidoctor.")
	delete file('src/main/resources/static/docs')
}

//4
bootJar {
	dependsOn asciidoctor
	copy {
		from "${asciidoctor.outputDir}"
		into 'src/main/resources/static/docs'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// https://mvnrepository.com/artifact/org.flywaydb/flyway-core
	runtimeOnly 'com.h2database:h2:1.4.200'
	implementation 'org.flywaydb:flyway-core:5.2.4'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '2.0.5.RELEASE'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.16.2'

	implementation group: 'org.springframework.cloud', name: 'spring-cloud-sleuth-zipkin', version: '3.1.4'   // zipkin
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-sleuth', version: '3.1.4'   // sleuth
	// https://mvnrepository.com/artifact/com.google.firebase/firebase-admin
	implementation group: 'com.google.firebase', name: 'firebase-admin', version: '8.1.0'
}

openapi3 {
	server = 'https://localhost:8080'
	title = 'rest docs + swagger UI'
	description = 'My API description'
	version = '0.0.1'
	format = 'json'
	outputFileNamePrefix = 'open-api-3-firebase-service'
	outputDirectory = 'src/main/resources/static/docs'
}

tasks.named('test') {
	useJUnitPlatform()
}
